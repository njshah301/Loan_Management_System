package com.luma.controller;

import org.apache.catalina.startup.LifecycleListenerRule;
import org.hibernate.annotations.Parameter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationArguments;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.service.annotation.DeleteExchange;

import com.luma.model.Employee;
import com.luma.model.dto.EmployeeRegisterDto;
import com.luma.service.service.EmployeeService;

import jakarta.validation.Valid;
import lombok.extern.java.Log;

import java.util.List;
@RequestMapping("/api/employee")
@RestController
public class EmployeeController {
	
	@Autowired
	private EmployeeService employeeService;
	
	@GetMapping
	
	public List<EmployeeRegisterDto> getEmployees()
	{ 
		List<EmployeeRegisterDto> employeeRegisterDtos=employeeService.getEmployees();
		return employeeRegisterDtos;
	}
	@PostMapping
	public ResponseEntity<String> addEmployee(@Valid @RequestBody EmployeeRegisterDto employeeRegisteDto)
	{
		EmployeeRegisterDto emp=employeeService.addEmployee(employeeRegisteDto);
		return new ResponseEntity<> (emp,HttpStatus.CREATED);
		
	}
	
	@PutMapping
	public void updateEmployee(@Valid @PathVariable Long id,@RequestBody EmployeeRegisterDto employeeRegisterDto)
	{
		employeeService.updateEmployee(employeeRegisterDto);
	}
	
	@DeleteMapping
	public void deleteEmployee(@Valid @PathVariable Long id)
	{
		employeeService.deleteEmplooyee(id);
	}
	
	
}
